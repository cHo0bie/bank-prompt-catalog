import streamlit as st, json
from src.prompt_loader import load, render_template
from src.utils import get_provider, pretty
from src.validate import ensure_valid

st.set_page_config(page_title="Bank Prompt Catalog Demo", page_icon="ü§ñ", layout="wide")

st.title("–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–º–ø—Ç–æ–≤ ‚Äî –¥–µ–º–æ")

tab = st.sidebar.radio("–°—Ü–µ–Ω–∞—Ä–∏–π", ["FAQ", "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤", "–ñ–∞–ª–æ–±–∞", "–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞"])

system = load("prompts/system_ru.md")
style = load("prompts/style_ru.md")
policies = load("prompts/policies_ru.md")

provider = get_provider()

def run(prompt_path, schema_path, **kwargs):
    prompt = render_template(prompt_path, system=system, style=style, policies=policies, **kwargs)
    st.subheader("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π prompt") 
    st.code(prompt, language="markdown")
    with st.spinner("–ó–∞–ø—Ä–æ—Å –∫ LLM..."):
        raw = provider.chat([{"role":"system","content":system},{"role":"user","content":prompt}], temperature=0.2, max_tokens=800)
    st.subheader("—Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç") 
    st.code(raw, language="json")
    schema = json.loads(load(schema_path))
    data, err = ensure_valid(raw, schema)
    if err:
        st.error(f"–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞: {err}")
    else:
        st.success("–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞") 
        st.code(pretty(data), language="json")

if tab == "FAQ":
    q = st.text_area("–í–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞", "–ö–∞–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç—É –¥—Ä—É–≥–æ–≥–æ –±–∞–Ω–∫–∞?")
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å", key="faq"):
        run("prompts/templates/faq_ru.prompt", "prompts/schemas/faq.schema.json", question=q)

elif tab == "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤":
    t = st.text_area("–¢–µ–∫—Å—Ç —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏", "–û–û–û –†–æ–º–∞—à–∫–∞, –ò–ù–ù 7701234567, –ö–ü–ü 770101001, —Ä/—Å 40702810900000012345 –≤ –ü–ê–û –°—É–ø–µ—Ä–ë–∞–Ω–∫, –ë–ò–ö 044525225, –∫/—Å 30101810400000000225")    
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å", key="extract"):
        run("prompts/templates/extract_requisites_ru.prompt", "prompts/schemas/extract_requisites.schema.json", text=t)

elif tab == "–ñ–∞–ª–æ–±–∞":
    c = st.text_area("–¢–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã", "–° –º–æ–µ–π –∫–∞—Ä—Ç—ã —Å–ø–∏—Å–∞–ª–∏ –¥–µ–Ω—å–≥–∏ –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç —É–∂–µ 2 —á–∞—Å–∞.")
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å", key="complaint"):
        run("prompts/templates/complaint_response_ru.prompt", "prompts/schemas/complaint.schema.json", complaint=c)

else:
    f = st.text_area("–§–∞–∫—Ç—ã –æ –ø–ª–∞—Ç–µ–∂–µ (JSON)", '{"payment_id":"abc123","status":"pending","amount":1500,"currency":"RUB","timestamp":"2025-09-02T10:05:00+03:00"}')
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å", key="payment"):
        run("prompts/templates/payment_status_ru.prompt", "prompts/schemas/payment_status.schema.json", facts_json=f)
